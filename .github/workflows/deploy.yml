name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: docker
    steps:
      - name: Checkout c贸digo
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19.0'

      - name: Cache dependencias de npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar Linter (ESLint)
        run: npm run lint || true

      - name: Ejecutar Pruebas (Mocha)
        run: npm test

  build_and_push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: docker
    needs: tests
    steps:
      - name: Checkout c贸digo
        uses: actions/checkout@v3

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/reditos-app:latest .

      - name: Push a Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/reditos-app:latest

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: docker/kubernetes
    needs: build_and_push
    steps:
      - name: Checkout c贸digo
        uses: actions/checkout@v3

      - name: Configurar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.29.3'

      - name: Establecer credenciales kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Verificar conexi贸n
        run: |
          kubectl config view
          kubectl cluster-info
     
      - name: Desplegar a Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Verificar pods
        run: kubectl get pods -o wide
